name: Fuzz
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # nightly

jobs:
  run:
    name: Run
    runs-on: ubuntu-latest
    env:
      GOFLAGS: -trimpath
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4
        with:
          repository: genjidb/genji

      - name: Install Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.16.3

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up cache
        uses: actions/cache@v3.2.6
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: fuzz-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            fuzz-go-

      - name: Build Go
        run: go install golang.org/dl/gotip@latest && gotip download dev.fuzz

      # TODO(tie) commit and push corpus; that is, we want to run fuzz tests
      # for each package with `-test.fuzzcachedir testdata/corpus` flag, and
      # then commit **/testdata/corpus/*/*
      #
      # Also note that current dev.fuzz implementation does not fuzz `./...`
      # when given the -test.fuzzcachedir flag.
      #
      # Currently interesting inputs are (or at least should be) stored in
      # GOCACHE which GitHub is free to purge at any point in time.

      - name: Run tests
        run: gotip test -v -run=^$ -test.fuzztime=5h -test.fuzz=. ./...
